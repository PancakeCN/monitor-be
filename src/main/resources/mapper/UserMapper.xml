<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pancake.monitorbe.dao.UserMapper">
    <resultMap type="com.pancake.monitorbe.entity.User" id="BaseResultMap">
        <result property="loginName" jdbcType="VARCHAR" column="login_name"/>
        <result property="username" jdbcType="VARCHAR" column="username"/>
        <result property="password" jdbcType="VARCHAR" column="password"/>
        <result property="auth" jdbcType="INTEGER" column="auth"/>
        <result property="phoneNumber" jdbcType="VARCHAR" column="phone_number"/>
    </resultMap>
    <resultMap type="com.pancake.monitorbe.model.UserResult" id="UserResultMap">
        <result property="loginName" jdbcType="VARCHAR" column="login_name"/>
        <result property="username" jdbcType="VARCHAR" column="username"/>
        <result property="password" jdbcType="VARCHAR" column="password"/>
        <result property="auth" jdbcType="INTEGER" column="auth"/>
        <result property="authComment" jdbcType="VARCHAR" column="auth_comment"/>
        <result property="phoneNumber" jdbcType="VARCHAR" column="phone_number"/>
    </resultMap>

    <sql id="Base_Column_List">
       login_name, username, password, auth, phone_number
    </sql>

    <sql id="UserResult_Column_List">
        login_name, username, password, auth, auth_comment, phone_number
    </sql>

<!--
    获取所有用户列表
-->
    <select id="getAllUserList" resultMap="UserResultMap">
        select * from monitor.view_user limit #{pageOffset, jdbcType=INTEGER}, #{pageNum, jdbcType=INTEGER}
    </select>

<!--
    通过主键获取一条用户信息
-->
    <select id="getOneUserByPrimaryKey" parameterType="String" resultMap="UserResultMap">
        select <include refid="UserResult_Column_List"/>
        from monitor.view_user where login_name = #{loginName, jdbcType=VARCHAR}
    </select>

<!--
    获取所有登录名列表（当为普通用户）
-->
    <select id="getNormalLoginNameList" resultType="String">
        select login_name from monitor.view_user where auth = 1
    </select>

<!--
    通过username模糊查询用户列表
-->
    <select id="getUserListByUsernameFuzzy" parameterType="String" resultMap="UserResultMap">
        select <include refid="UserResult_Column_List"/> from monitor.view_user
        where username like concat('%', #{usernameIn, jdbcType=VARCHAR}, '%')
    </select>

<!--
    登录验证
-->
    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from monitor.tb_user
        where login_name = #{loginName, jdbcType=VARCHAR} and password = #{password, jdbcType=VARCHAR}
    </select>

<!--
    插入一条用户数据
-->
    <insert id="insert" parameterType="com.pancake.monitorbe.entity.User">
        insert into monitor.tb_user(login_name,username,password,auth,phone_number)
        values(#{loginName, jdbcType=VARCHAR},#{username, jdbcType=VARCHAR},#{password, jdbcType=VARCHAR},
               #{auth, jdbcType=INTEGER},#{phoneNumber, jdbcType=VARCHAR})
    </insert>

<!--
    选择性 插入一条用户数据
-->
    <insert id="insertSelective" parameterType="com.pancake.monitorbe.entity.User">
        insert into monitor.tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginName != null">
                login_name,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="auth != null">
                auth,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginName != null">
                #{loginName, jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password, jdbcType=VARCHAR},
            </if>
            <if test="auth != null">
                #{auth, jdbcType=INTEGER},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

<!--
    通过主键修改一个用户
-->
    <update id="updateByPrimaryKey" parameterType="com.pancake.monitorbe.entity.User">
        update monitor.tb_user
        set
            login_name=#{loginName, jdbcType=VARCHAR},username=#{username, jdbcType=VARCHAR},password=#{password, jdbcType=VARCHAR},
            auth=#{auth, jdbcType=INTEGER},phone_number=#{phoneNumber, jdbcType=VARCHAR}
        where login_name=#{loginName}
    </update>

<!--
    通过主键 选择性 修改一个用户
-->
    <update id="updateByPrimaryKeySelective" parameterType="com.pancake.monitorbe.entity.User">
        update monitor.tb_user
        <set>
            <if test="loginName != null">
                login_name = #{loginName, jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password, jdbcType=VARCHAR},
            </if>
            <if test="auth != null">
                auth = #{auth, jdbcType=INTEGER},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber, jdbcType=VARCHAR},
            </if>
        </set>
        where login_name = #{loginName, jdbcType=VARCHAR}
    </update>

<!--
    通过主键删除一条用户数据
-->
    <delete id="deleteByPrimaryKey" parameterType="String">
        delete from monitor.tb_user where login_name=#{loginName, jdbcType=VARCHAR}
    </delete>
</mapper>